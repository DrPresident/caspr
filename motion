#!/usr/bin/env python

from time import sleep
from sys import stdout, argv

class Motion:
    def __init__(self,gpio):

        self.right_wheel   = 0
        self.left_wheel    = 0
        self.sec_per_inch = .01
        self.sec_per_degree = .01

        self.gpio = gpio
        self.gpio.setup(self.right_wheel,self.gpio.OUT)
        self.gpio.setup(self.left_wheel,self.gpio.OUT)

        self.stop()

    def turn_right(self):
        stdout.write("turning right...\n")
        self.rotate(-90)

    def turn_left(self):
        stdout.write("turning left...\n")
        self.rotate(90)

    def turn_around(self):
        stdout.write("turning around...\n")
        self.rotate(180)

    def rotate(self, deg=0):
        self.gpio.output(self.right_wheel, (deg < 0))
        self.gpio.output(self.left_wheel, (deg > 0))

        if abs(deg) > 0:
            sleep(self.sec_per_degree * abs(deg))
            stop()

    def go_foot(self,feet):
        self.go_inch(feet * 12):

    def go_inch(self,inches):
        stdout.write("go ")
        if inches > 12: 
            stdout.write(inches / 12 + "'")
        stdout.write(inches % 12 + "\"\n")
        self.go()
        sleep(self.sec_per_inch * inches)
        self.stop()

    def go(self):
        self.gpio.output(self.right_wheel,True)
        self.gpio.output(self.left_wheel,True)

    def stop(self):
        stdout.write("stopping...\n")
        self.gpio.output(self.right_wheel,False)
        self.gpio.output(self.left_wheel,False)

#run tests for calibration
if __name__ == "__main__":
    import RPi.GPIO as gpio
    motion = Motion(gpio)
    stdout.write("going forward 1ft)" + motion.sec_per_inch * 12 + "s")
    for r in range(-360, 360, 90):
        stdout.write("rotating " + r + " degrees in " + motion.sec_per_degree + "s")
        motion.rotate(rotation)
        sleep(1)

